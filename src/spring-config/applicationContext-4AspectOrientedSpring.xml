<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
   
   <bean id="audience" class="local.sia._4AspectOrientedSpring._43DeclaringAspectsInXML.Audience"></bean>
   <!--  
  <aop:config>
  	<aop:aspect ref="audience">
  		<aop:before method="takeSeats" pointcut="execution(* local.sia._2wiringbean.Performer.perform(..))"/>
  		<aop:before method="turnOffCellPhones" pointcut="execution(* local.sia._2wiringbean.Performer.perform(..))"/>
  		<aop:after-returning method="applaud" pointcut="execution(* local.sia._2wiringbean.Performer.perform(..))"/>
  		<aop:after-throwing method="demandRefund" pointcut="execution(* local.sia._2wiringbean.Performer.perform(..))"/>
  	</aop:aspect>
  </aop:config>
  	-->
  	<!-- modified the  <aop:config>   -->
  	<!-- 
  	<aop:config>
  		<aop:aspect ref="audience">
  			<aop:pointcut expression="execution(* local.sia._2wiringbean.Performer.perform(..))" id="performance"/>
  			<aop:before method="takeSeats" pointcut-ref="performance"/>
  			<aop:before method="turnOffCellPhones" pointcut-ref="performance"/>
  			<aop:after-returning method="applaud" pointcut-ref="performance"/>
  			<aop:after-throwing method="demandRefund" pointcut-ref="performance"/>
  		</aop:aspect>
  	</aop:config>
  	-->
  	<!-- <aop:around> -->
  	<aop:config>
  		<aop:aspect ref="audience">
  			<aop:pointcut expression="execution(* local.sia._2wiringbean.Performer.perform(..))" id="performance"/>
  			<aop:around method="watchPerformance" pointcut-ref="performance"/>
  		</aop:aspect>
  	</aop:config>
  
	<bean id="beanForAspect" class="local.sia._4AspectOrientedSpring._43DeclaringAspectsInXML.BeanForAspect">
		<property name="instrument">
			<bean class="local.sia._4AspectOrientedSpring._43DeclaringAspectsInXML.BeanForAspectInstrument"></bean>
			<!-- invoke and test <aop:after-throwing method="demandRefund" pointcut-ref="performance"/> 
				if you want invoke and test the aop:after-throwing,you can`t try catch the Exception.if you did, spring will invoke the  <aop:after-returning>-->
<!-- 			 <null></null> -->	
		</property>
	</bean>
	
	<!-- 4.3.3 Passing parameters to advice -->
	<bean id="magician" class="local.sia._4AspectOrientedSpring._433PassingParameterstoAdvice.Magician"></bean>
	<bean id="volunteer" class=" local.sia._4AspectOrientedSpring._433PassingParameterstoAdvice.Volunteer">
		<property name="thoughts" value="#{'fuck the world!!!'}"></property>
	</bean>
	<aop:config>
		<aop:aspect ref="magician">
			<aop:pointcut id="Volunteer"
			expression="execution(* local.sia._4AspectOrientedSpring._433PassingParameterstoAdvice.Thinker.setThoughts(String)) and args(thoughts)" 
			/>
			<aop:after	pointcut-ref="Volunteer" method="interceptThoughts" arg-names="thoughts" />
		</aop:aspect>	
	</aop:config>
	
	
		
	
</beans>